workflows:
  android-development:
    name: Android Debug Build (No EAS)
    max_build_duration: 120
    environment:
      node: 20
      java: 17
    environment_variables:
      EXPO_USE_COMMUNITY_AUTOLINKING: "1"
    triggering:
      events: [push, pull_request]
      branch_patterns: [{ pattern: "*", include: true }]
    scripts:
      - name: Setup package manager
        script: |
          corepack enable
          corepack prepare pnpm@latest --activate
      - name: Install dependencies
        script: pnpm install --frozen-lockfile
      - name: Clean autolinking cache
        script: |
          rm -rf android/app/build/generated/autolinking
          rm -rf node_modules/.cache
      - name: Prebuild native (Expo → Android)
        script: npx expo prebuild --platform android --no-install
      - name: Build debug APK
        script: |
          cd android
          chmod +x gradlew
          ./gradlew assembleDebug
    artifacts:
      - android/app/build/outputs/apk/debug/app-debug.apk

  ios-development:
    name: iOS Debug Build (No EAS)
    max_build_duration: 120
    environment:
      node: 20
      xcode: latest
      cocoapods: default
    triggering:
      events: [push, pull_request]
      branch_patterns: [{ pattern: "*", include: true }]
    scripts:
      - name: Setup package manager
        script: |
          corepack enable
          corepack prepare pnpm@latest --activate
      - name: Install dependencies
        script: pnpm install --frozen-lockfile
      - name: Prebuild native (Expo → iOS)
        script: npx expo prebuild --platform ios --no-install
      - name: Build for Simulator (no signing)
        script: |
          cd ios
          pod install
          WORKSPACE=$(ls *.xcworkspace | head -n1)
          SCHEME=$(xcodebuild -list -json | plutil -extract project.schemes.0 raw -o - - 2>/dev/null || echo Swiftly)
          xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -configuration Debug -sdk iphonesimulator -derivedDataPath "$CM_BUILD_DIR/DerivedData" build
          APP_PATH=$(find "$CM_BUILD_DIR/DerivedData/Build/Products/Debug-iphonesimulator" -name "*.app" -maxdepth 2 | head -n1)
          mkdir -p "$CM_BUILD_DIR/ios_sim" && cp -R "$APP_PATH" "$CM_BUILD_DIR/ios_sim/"
    artifacts:
      - ios_sim/*.app

  android-release:
    name: Android Release Build (No EAS)
    max_build_duration: 120
    environment:
      node: 20
      java: 17
    environment_variables:
      EXPO_USE_COMMUNITY_AUTOLINKING: "1"
    triggering:
      events: [push]
      branch_patterns: [{ pattern: "main", include: true }]
      tag_patterns: [{ pattern: "v*", include: true }]
    scripts:
      - name: Setup package manager
        script: |
          corepack enable
          corepack prepare pnpm@latest --activate
      - name: Install dependencies
        script: pnpm install --frozen-lockfile
      - name: Clean autolinking cache
        script: |
          rm -rf android/app/build/generated/autolinking
          rm -rf node_modules/.cache
      - name: Prebuild native (Expo → Android)
        script: npx expo prebuild --platform android --no-install
      - name: Setup keystore (if provided)
        script: |
          if [ -n "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks
            cat >> android/gradle.properties << EOF
            MYAPP_UPLOAD_STORE_FILE=keystore.jks
            MYAPP_UPLOAD_STORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD
            MYAPP_UPLOAD_KEY_ALIAS=$ANDROID_KEY_ALIAS
            MYAPP_UPLOAD_KEY_PASSWORD=$ANDROID_KEY_ALIAS_PASSWORD
            EOF
          fi
      - name: Build release AAB
        script: |
          cd android
          chmod +x gradlew
          ./gradlew bundleRelease
    artifacts:
      - android/app/build/outputs/bundle/release/app-release.aab
      - android/app/build/outputs/apk/release/app-release.apk
